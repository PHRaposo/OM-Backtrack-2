; OM File Header - Saved 2024/12/30 09:36:24
; (7.05 :patc (om-make-point 81 172) (om-make-point 335 25) (om-make-point 638 616) "" 183 0 nil "2024/12/30 09:36:20")
; End File Header
; External resources 
; (list (list (quote :abstraction) "#P\"04-functions/an-integer-between.omp\""))
(in-package :om)(load-lib-for (quote ("OM-Backtrack")))(setf *om-current-persistent* (om-load-patch1 "01-an-integer-between" (quote ((let ((box (om-load-boxcomment "comment 3" (om-make-point 167 51) (quote "<<< Open the patch$to see how it is done.") "" (om-make-point 191 201) nil (om-make-color 0 0 0) (om-make-font "Verdana" 14.0D0 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 2" (quote t) (quote nil) (om-make-point 148 371) (om-make-point 34 30) 10 "10" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 88 370) (om-make-point 27 30) 0 "0" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "ALL-VALUES" (quote all-values) (quote ((om-load-inputfun (quote input-funbox) "expressions" "EXPRESSIONS" nil))) (om-make-point 98 497) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 2" (om-make-point 133 34) (quote "Built-in function.") "" (om-make-point 200 406) nil (om-make-color 0 0 0) (om-make-font "Verdana" 14.0D0 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 550 136) (quote "The utility of these EITHER and FAIL is illustrated by the following example.$$The following function nondeterministically returns an integer between the$given bounds. This function is so ubiquitous that it is built into Screamer.$$$") "" (om-make-point 71 26) nil (om-make-color 0 0 0) (om-make-font "Verdana" 14.0D0 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "AN-INTEGER-BETWEEN 2" (quote an-integer-between) (quote ((om-load-inputfun (quote input-funbox) "low value" "LOW" 0) (om-load-inputfun (quote input-funbox) "high value" "HIGH" 10))) (om-make-point 72 402) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote patch-box) "an-integer-between" (quote ("elements" "OM-Backtrack-tutorial-patches" "00-screamer-documentation" "04-functions" "an-integer-between")) (quote ((om-load-inputfun (quote input-funbox) "" "low" nil) (om-load-inputfun (quote input-funbox) "" "high" nil))) (om-make-point 69 172) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 5" (quote t) (quote nil) (om-make-point 80 134) (om-make-point 27 30) 0 "0" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 4" (quote t) (quote nil) (om-make-point 143 137) (om-make-point 34 30) 10 "10" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "ALL-VALUES 4" (quote all-values) (quote ((om-load-inputfun (quote input-funbox) "expressions" "EXPRESSIONS" nil))) (om-make-point 95 256) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((6 0 3 0 nil 0) (2 0 6 0 nil 0) (1 0 6 1 nil 0) (8 0 7 0 nil 0) (9 0 7 1 nil 0) (7 0 10 0 nil 0))) nil 7.04))
